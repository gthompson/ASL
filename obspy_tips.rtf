{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red16\green60\blue192;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c6667\c33333\c80000;
}
\margl1440\margr1440\vieww15400\viewh13120\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs26\fsmilli13333 \cf2 \cb3 \expnd0\expndtw0\kerning0
Some ObsPy tricks from Tobias Megies 2014/03/14\
\
for i, tr in enumerate(st): 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 # plot correctly\cb1 \uc0\u8232 \cb3 t0 = min([tr.stats.starttime for tr in st]) \
\
st.trim(starttime=t0, pad=True, fill_value=None) 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 plt.plot(tr.times, tr.data, linestyle="-", marker=None, color=color, linewidth=1.5, label=\cf4 tr.id\cf2 ) \
To ensure all traces have the same start time you could trim with filling masked values.. e.g.: 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 st.trim(starttime=t0, pad=True, fill_value=None) 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 from obspy import read import matplotlib.pyplot as plt 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 # put together modified example stream st = read()\cb1 \uc0\u8232 \cb3 for i, tr in enumerate(st): 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 tr.trim(starttime=tr.stats.starttime + 2 * i) st[1].resample(200, no_filter=True) 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 # plot correctly\cb1 \uc0\u8232 \cb3 for tr, color in zip(st, ["black", "red", "blue"]): 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 # get absolute time stamps for every sample\cb1 \uc0\u8232 \cb3 times = [(tr.stats.starttime + t).datetime for t in tr.times()] plt.plot_date(times, tr.data, linestyle="-", marker=None, 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 color=color, linewidth=1.5, label=\cf4 tr.id\cf2 ) 
\f1\fs24 \cb1 \

\f0\fs26\fsmilli13333 \cb3 plt.grid() plt.legend() plt.show() 
\f1\fs24 \cb1 \
}